{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","AboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fac8b357.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport '../theme.css'\r\n// import { Link } from 'react-router-dom'\r\n// \r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n             <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n             <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n               <span className=\"navbar-toggler-icon\"></span>\r\n             </button>\r\n             <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">  {props.AboutText} </Link>\r\n              </li> */}\r\n            </ul>\r\n      \r\n            <div class=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className={`form-check-label text-${props.mode === 'light'? 'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\ntitle: PropTypes.string.isRequired,\r\nAboutText: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title :\"My Title Here\",\r\n    AboutText: \"AboutText here\", \r\n  };","import React, { useState } from \"react\";\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUPClick =()=>{\r\n        let newText= text.toUpperCase()        \r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper Case\", \"success\")\r\n    }\r\n    const handleLCClick =()=>{\r\n        let newText= text.toLowerCase()        \r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower Case\", \"success\")\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"Enter Text Here\");\r\n\r\n    const handleClear =()=>{\r\n        let newText = ''\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\", \"success\")\r\n\r\n    } \r\n    const handleCopy = ()=> {\r\n        let text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Text Copied\", \"success\")\r\n\r\n    }\r\n\r\n  return (\r\n      <>\r\n    <div className=\"container\" style={{color: props.mode === 'light'? 'white':'#0c0e45'}}>\r\n      <h1 className={`text-${props.mode === 'light'? 'dark':'light'} `}>{props.heading} </h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" style={{backgroundColor: props.mode === 'light'? 'white':'#000000', color: props.mode ==='light'?'black':'white'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className={`btn btn-primary mx-2`} onClick={handleUPClick}>Convert to UpperCase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLCClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>CopyText</button>\r\n     \r\n    </div>\r\n    <div className=\"container my-4\" style={{color: props.mode === 'light'? '#0c0e45':'white'}}>\r\n        <h3>Your Text Summary</h3>\r\n        <p>{text.split(\" \").length} words , {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <p>Number of Sentences {text.split(\".\").length} </p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0 ?text : \"Enter Something in the Text Box Above To Prreview it Here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div>\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)} : </strong>\r\n          {props.alert.msg}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import logo from \"./logo.svg\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0c0e45\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils | DarkMode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils | lightMode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          AboutText=\"About TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to Analyse Below\"\n                mode={mode}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}